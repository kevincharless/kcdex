[{"D:\\PemØgraman\\Project\\React\\pokedex\\pokedex\\src\\index.js":"1","D:\\PemØgraman\\Project\\React\\pokedex\\pokedex\\src\\reportWebVitals.js":"2","D:\\PemØgraman\\Project\\React\\pokedex\\pokedex\\src\\App.js":"3","D:\\PemØgraman\\Project\\React\\pokedex\\pokedex\\src\\components\\Navbar\\index.js":"4","D:\\PemØgraman\\Project\\React\\pokedex\\pokedex\\src\\components\\NavBar\\index.js":"5","D:\\PemØgraman\\Project\\React\\pokedex\\pokedex\\src\\pages\\home\\index.js":"6","D:\\PemØgraman\\Project\\React\\pokedex\\pokedex\\src\\pages\\moves\\index.js":"7","D:\\PemØgraman\\Project\\React\\pokedex\\pokedex\\src\\pages\\forms\\index.js":"8","D:\\PemØgraman\\Project\\React\\pokedex\\pokedex\\src\\pages\\items\\index.js":"9","D:\\PemØgraman\\Project\\React\\pokedex\\pokedex\\src\\pages\\typecharts\\index.js":"10","D:\\PemØgraman\\Project\\React\\pokedex\\pokedex\\src\\components\\card\\index.js":"11","D:\\PemØgraman\\Project\\React\\pokedex\\pokedex\\src\\redux\\store.js":"12","D:\\PemØgraman\\Project\\React\\pokedex\\pokedex\\src\\redux\\reducers\\index.js":"13","D:\\PemØgraman\\Project\\React\\pokedex\\pokedex\\src\\redux\\actions\\index.js":"14","D:\\PemØgraman\\Project\\React\\pokedex\\pokedex\\src\\axios\\index.js":"15","D:\\PemØgraman\\Project\\React\\pokedex\\pokedex\\src\\redux\\reducers\\pokemonReducer.js":"16","D:\\PemØgraman\\Project\\React\\pokedex\\pokedex\\src\\redux\\actions\\types.js":"17","D:\\PemØgraman\\Project\\React\\pokedex\\pokedex\\src\\pages\\loading\\index.js":"18","D:\\PemØgraman\\Project\\React\\pokedex\\pokedex\\src\\components\\cardDetail\\index.js":"19","D:\\PemØgraman\\Project\\React\\pokedex\\pokedex\\src\\pages\\pokemondetail\\index.js":"20"},{"size":500,"mtime":1609426110353,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":499162500000,"results":"23","hashOfConfig":"22"},{"size":982,"mtime":1609734511438,"results":"24","hashOfConfig":"22"},{"size":3019,"mtime":1609398011161,"results":"25","hashOfConfig":"22"},{"size":3761,"mtime":1609770675884,"results":"26","hashOfConfig":"22"},{"size":4550,"mtime":1609830368940,"results":"27","hashOfConfig":"22"},{"size":2472,"mtime":1609735304708,"results":"28","hashOfConfig":"22"},{"size":2468,"mtime":1609735295488,"results":"29","hashOfConfig":"22"},{"size":2048,"mtime":1609769776698,"results":"30","hashOfConfig":"22"},{"size":589,"mtime":1609577040960,"results":"31","hashOfConfig":"22"},{"size":5732,"mtime":1609830353719,"results":"32","hashOfConfig":"22"},{"size":342,"mtime":1609471966212,"results":"33","hashOfConfig":"22"},{"size":158,"mtime":1609420196654,"results":"34","hashOfConfig":"22"},{"size":611,"mtime":1609825990081,"results":"35","hashOfConfig":"22"},{"size":105,"mtime":1609424396988,"results":"36","hashOfConfig":"22"},{"size":725,"mtime":1609768541163,"results":"37","hashOfConfig":"22"},{"size":188,"mtime":1609735151330,"results":"38","hashOfConfig":"22"},{"size":810,"mtime":1609727615391,"results":"39","hashOfConfig":"22"},{"size":4119,"mtime":1609839107866,"results":"40","hashOfConfig":"22"},{"size":2842,"mtime":1609838695313,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1rd3d0g",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\PemØgraman\\Project\\React\\pokedex\\pokedex\\src\\index.js",[],["86","87"],"D:\\PemØgraman\\Project\\React\\pokedex\\pokedex\\src\\reportWebVitals.js",[],"D:\\PemØgraman\\Project\\React\\pokedex\\pokedex\\src\\App.js",[],"D:\\PemØgraman\\Project\\React\\pokedex\\pokedex\\src\\components\\Navbar\\index.js",[],"D:\\PemØgraman\\Project\\React\\pokedex\\pokedex\\src\\components\\NavBar\\index.js",["88","89"],"import React, { useEffect, useState } from 'react';\r\nimport {\r\n    Button,\r\n    Col,\r\n    Navbar,\r\n    NavbarText,\r\n    Row\r\n} from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { ReactComponent as LogoPokemon } from '../../assets/images/logopokemon.svg'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst NavBar = (props) => {\r\n\r\n    return (\r\n        <>\r\n            <Navbar className=\"p-5 pb-4 align-items-end\" id=\"Nav\" expand=\"md\" style={{ backgroundColor: `${props.backgroundColor}`}}>\r\n                <div className=\"me-auto\" id=\"header\">\r\n                    <span className=\"d-block text-white fs-3 fw-bold lh-1\" href=\"/\">\r\n                        What {props.title}\r\n                    </span>\r\n                    <span className=\"d-block text-white fs-3 fw-bold lh-1\" href=\"/\">\r\n                        are you looking for ?\r\n                    </span>\r\n                </div>\r\n                {props.handleOnChange ? (\r\n                    <NavbarText>\r\n                        <div className=\"form-group has-search\">\r\n                            <FontAwesomeIcon className=\"form-control-feedback\" icon={faSearch} />\r\n                            <input type=\"text\" className=\"form-control\" onChange={props.handleOnChange} placeholder={`Search ${props.title}`} />\r\n                        </div>\r\n                    </NavbarText>\r\n                    ) : (\r\n                        null\r\n                    )\r\n                }\r\n                \r\n                <LogoPokemon id=\"LogoPokemon\"/>\r\n            </Navbar>\r\n            <div id=\"NavBackground\"></div>\r\n            <Navbar className=\" d-flex align-items-end justify-content-center\" id=\"Navbar\" expand=\"md\">\r\n                <Row className=\"w-100\">\r\n                    <Col className=\"d-flex justify-content-center py-3\">\r\n                        <Link to=\"/\">\r\n                            <Button className=\"border-0\" id=\"ButtonPokedex\">Pokedex\r\n                                <LogoPokemon id=\"LogoPokemon\" />\r\n                            </Button>\r\n                        </Link>\r\n                    </Col>\r\n                    <Col className=\"d-flex justify-content-center py-3\">\r\n                        <Link to=\"/moves\">\r\n                            <Button className=\"border-0\" id=\"ButtonMoves\">Moves\r\n                                <LogoPokemon id=\"LogoPokemon\" />\r\n                            </Button>\r\n                        </Link>\r\n                    </Col>\r\n                    <Col className=\"d-flex justify-content-center py-3\">\r\n                        <Link to=\"/forms\">\r\n                            <Button className=\"border-0\" id=\"ButtonForms\">Forms\r\n                                <LogoPokemon id=\"LogoPokemon\" />\r\n                            </Button>\r\n                        </Link>\r\n                    </Col>\r\n                    <Col className=\"d-flex justify-content-center py-3\">\r\n                        <Link to=\"/items\">\r\n                            <Button className=\"border-0\" id=\"ButtonItems\">Items\r\n                                <LogoPokemon id=\"LogoPokemon\" />\r\n                            </Button>\r\n                        </Link>\r\n                    </Col>\r\n                    <Col className=\"d-flex justify-content-center py-3\">\r\n                        <Link to=\"/typecharts\">\r\n                            <Button className=\"border-0\" id=\"ButtonType\">Type Charts\r\n                                <LogoPokemon id=\"LogoPokemon\" />\r\n                            </Button>\r\n                        </Link>\r\n                    </Col>\r\n                </Row>\r\n            </Navbar>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default NavBar\r\n","D:\\PemØgraman\\Project\\React\\pokedex\\pokedex\\src\\pages\\home\\index.js",["90","91"],"import React, { useEffect, useState, useMemo } from 'react';\r\nimport {\r\n    Container,\r\n    Col,\r\n    Row,\r\n} from 'reactstrap'\r\nimport ReactPaginate from 'react-paginate';\r\n\r\nimport Card from '../../components/card';\r\nimport LoadingPage from '../loading';\r\nimport Navbar from '../../components/NavBar/index';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchPokemons } from '../../redux/actions'\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Home = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const pokemons = useSelector(state => state.pokemons)\r\n    const [offset, setOffset] = useState(0)\r\n    const [pokemonFilter, setPokemonFilter] = useState([])\r\n    const [keyword, setKeywords] = useState(\"\")\r\n\r\n    const pokemonCounts = pokemons.pokemonLists.count\r\n    const pokemonLists = pokemons.pokemonLists.results\r\n\r\n    const currentPokemons = useMemo(() => pokemonLists?.slice(offset, offset+30), [pokemonLists, offset])\r\n    const currentPokemonsFilter = useMemo(() => pokemonFilter?.slice(offset, offset+30), [offset, pokemonFilter])\r\n    \r\n    useEffect(() => {\r\n        dispatch(fetchPokemons())\r\n        \r\n    }, []) // eslint-disable-next-line react-hooks/exhaustive-deps\r\n\r\n    useEffect(() => {\r\n        setPokemonFilter(pokemonLists?.filter(pokemon => {\r\n            return pokemon.name.toUpperCase().includes( keyword.toUpperCase() )\r\n        }))\r\n    }, [keyword])\r\n\r\n    const handlePageClick = (currentPage) => {\r\n        let selectedPage = currentPage.selected\r\n        setOffset(selectedPage*30)\r\n    }\r\n\r\n    const handleOnChange = e => {\r\n        setKeywords(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {pokemons.isLoading ? (\r\n                <LoadingPage />\r\n                ) : (\r\n                <>\r\n                    <Navbar \r\n                        title=\"Pokémon\"\r\n                        backgroundColor=\"#FF6961\"\r\n                        handleOnChange={handleOnChange}\r\n                    />\r\n                    <Container className=\"pt-3\">\r\n                        <Row>\r\n                            <h1 className=\"fw-bold\">Pokédex</h1>\r\n                        </Row>\r\n                        <Row>\r\n                            {keyword ? (\r\n                                currentPokemonsFilter?.map((pokemon) => \r\n                                <Col md=\"2\" key={pokemon.url}>\r\n                                    <Link to={`/pokemon/${pokemon.name}`} style={{ textDecoration: \"none\" }}>\r\n                                        <Card pokemons={pokemonLists} url={pokemon.url} />\r\n                                    </Link>\r\n                                </Col>\r\n                            )) : (\r\n                                currentPokemons?.map((pokemon) => \r\n                                <Col md=\"2\" key={pokemon.url}>\r\n                                    <Link to={`/pokemon/${pokemon.name}`} style={{ textDecoration: \"none\" }}>\r\n                                        <Card pokemons={pokemonLists} url={pokemon.url} />\r\n                                    </Link>\r\n                                </Col>\r\n                            ))}\r\n                        </Row>\r\n                        <Row>\r\n                            <ReactPaginate\r\n                                previousLabel={'previous'}\r\n                                nextLabel={'next'}\r\n                                breakLabel={'...'}\r\n                                breakClassName={\"page-item disabled\"}\r\n                                breakLinkClassName={\"page-link\"}\r\n                                marginPagesDisplayed={2}\r\n                                pageRangeDisplayed={5}\r\n                                pageCount={keyword ? pokemonFilter?.length/30 : pokemonCounts/30}\r\n                                onPageChange={handlePageClick}\r\n                                containerClassName={\"pagination\"}\r\n                                pageClassName={\"page-item\"}\r\n                                pageLinkClassName={\"page-link\"}\r\n                                previousClassName={\"page-item\"}\r\n                                previousLinkClassName={\"page-link\"}\r\n                                nextClassName={\"page-item\"}\r\n                                nextLinkClassName={\"page-link\"}\r\n                                activeClassName={'active'}\r\n                            />\r\n                        </Row>\r\n                    </Container>\r\n                </>\r\n                )\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","D:\\PemØgraman\\Project\\React\\pokedex\\pokedex\\src\\pages\\moves\\index.js",[],"D:\\PemØgraman\\Project\\React\\pokedex\\pokedex\\src\\pages\\forms\\index.js",[],"D:\\PemØgraman\\Project\\React\\pokedex\\pokedex\\src\\pages\\items\\index.js",[],"D:\\PemØgraman\\Project\\React\\pokedex\\pokedex\\src\\pages\\typecharts\\index.js",[],"D:\\PemØgraman\\Project\\React\\pokedex\\pokedex\\src\\components\\card\\index.js",["92"],"import React, { useEffect, useState } from 'react'\r\nimport {\r\n    Col,\r\n    Row,\r\n    Card as Cardrs, CardImg, CardText, CardBody,\r\n    CardTitle, CardSubtitle, Button\r\n} from 'reactstrap';\r\nimport axios from '../../axios';\r\n\r\nimport normal from '../../assets/images/normal.svg'\r\nimport fire from '../../assets/images/fire.svg'\r\nimport fighting from '../../assets/images/fighting.svg'\r\nimport water from '../../assets/images/water.svg'\r\nimport flying from '../../assets/images/flying.svg'\r\nimport grass from '../../assets/images/grass.svg'\r\nimport poison from '../../assets/images/poison.svg'\r\nimport electric from '../../assets/images/electric.svg'\r\nimport ground from '../../assets/images/ground.svg'\r\nimport psychic from '../../assets/images/psychic.svg'\r\nimport rock from '../../assets/images/rock.svg'\r\nimport ice from '../../assets/images/ice.svg'\r\nimport bug from '../../assets/images/bug.svg'\r\nimport dragon from '../../assets/images/dragon.svg'\r\nimport ghost from '../../assets/images/ghost.svg'\r\nimport dark from '../../assets/images/dark.svg'\r\nimport steel from '../../assets/images/steel.svg'\r\nimport fairy from '../../assets/images/fairy.svg'\r\nimport unknown from '../../assets/images/unknown.svg'\r\n\r\nimport shilotte from '../../assets/images/shilotte.svg'\r\n\r\nconst Card = (props) => {\r\n    const [pokemon, setPokemon] = useState(null)\r\n    const [iconType, setIconType] = useState(null)\r\n\r\n    useEffect(() => {\r\n        let isMount = true\r\n        axios.get(props.url)\r\n        .then(res => isMount && setPokemon(res.data))\r\n\r\n        return () => isMount = false\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (pokemon) {\r\n            switch (pokemon?.types[0]?.type?.name) {\r\n                case 'normal':\r\n                    setIconType(normal)\r\n                    break\r\n                case 'fire':\r\n                    setIconType(fire)\r\n                    break\r\n                case 'fighting':\r\n                    setIconType(fighting)\r\n                        break\r\n                case 'water':\r\n                    setIconType(water)\r\n                    break\r\n                case 'flying':\r\n                    setIconType(flying)\r\n                    break\r\n                case 'grass':\r\n                    setIconType(grass)\r\n                    break\r\n                case 'poison':\r\n                    setIconType(poison)\r\n                    break\r\n                case 'electric':\r\n                    setIconType(electric)\r\n                    break\r\n                case 'ground':\r\n                    setIconType(ground)\r\n                        break\r\n                case 'psychic':\r\n                    setIconType(psychic)\r\n                    break\r\n                case 'rock':\r\n                    setIconType(rock)\r\n                    break\r\n                case 'ice':\r\n                    setIconType(ice)\r\n                    break\r\n                case 'bug':\r\n                    setIconType(bug)\r\n                    break\r\n                case 'dragon':\r\n                    setIconType(dragon)\r\n                    break\r\n                case 'ghost':\r\n                    setIconType(ghost)\r\n                        break\r\n                case 'dark':\r\n                    setIconType(dark)\r\n                    break\r\n                case 'steel':\r\n                    setIconType(steel)\r\n                    break\r\n                case 'fairy':\r\n                    setIconType(fairy)\r\n                    break\r\n                default:\r\n                    setIconType(unknown)\r\n                    break\r\n            }\r\n        }\r\n        \r\n    }, [pokemon])\r\n\r\n    if (!pokemon) return null\r\n    \r\n    return (\r\n        <div>\r\n            <Cardrs className=\"type my-2 pt-2\" id={pokemon?.types[0]?.type?.name ? pokemon.types[0].type.name : `unknown`}>\r\n                <CardBody className=\"p-3\">\r\n                    <CardSubtitle id=\"PokemonId\" tag=\"h6\" className=\"d-flex justify-content-end fw-bold\">{`#${pokemon.id}`}</CardSubtitle>\r\n                    <CardTitle id=\"PokemonName\" className=\"mb-0 fw-bold\" tag=\"h6\">\r\n                        {pokemon.name.charAt(0).toUpperCase() + pokemon.name.substr(1).toLowerCase()}\r\n                    </CardTitle>\r\n                    <Row>\r\n                        <Col xsm=\"5\" className=\"d-flex align-items-end pe-0\">\r\n                            <CardText>\r\n                                {pokemon.types.map(pokemonType =>\r\n                                    <span className=\"d-block px-3 mt-2 text-center\" id=\"PokemonTypes\" key={pokemonType.slot}>\r\n                                        {pokemonType.type.name}\r\n                                    </span>\r\n                                )}\r\n                                {!pokemon.types[0] ? (\r\n                                    <span className=\"d-block px-3 mt-2 text-center\" id=\"PokemonTypes\">\r\n                                        type unknown\r\n                                    </span>\r\n                                ) : (\r\n                                    null\r\n                                )}\r\n                            </CardText>\r\n                        </Col>\r\n                        <Col xsm=\"7\" className=\"d-flex justify-content-end ps-0\">\r\n                            <CardImg id=\"Pokemon\" className=\"w-100\" src={pokemon.sprites.front_default || shilotte} alt=\"Pokemon\" />\r\n                            <CardImg className=\"w-100\" id=\"PokemonTypeCardIcon\" src={iconType} alt=\"Pokemon Type Icon\" />\r\n                        </Col>\r\n                    </Row>\r\n                </CardBody>\r\n            </Cardrs>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card\r\n","D:\\PemØgraman\\Project\\React\\pokedex\\pokedex\\src\\redux\\store.js",[],"D:\\PemØgraman\\Project\\React\\pokedex\\pokedex\\src\\redux\\reducers\\index.js",[],"D:\\PemØgraman\\Project\\React\\pokedex\\pokedex\\src\\redux\\actions\\index.js",[],"D:\\PemØgraman\\Project\\React\\pokedex\\pokedex\\src\\axios\\index.js",[],"D:\\PemØgraman\\Project\\React\\pokedex\\pokedex\\src\\redux\\reducers\\pokemonReducer.js",[],"D:\\PemØgraman\\Project\\React\\pokedex\\pokedex\\src\\redux\\actions\\types.js",[],"D:\\PemØgraman\\Project\\React\\pokedex\\pokedex\\src\\pages\\loading\\index.js",[],"D:\\PemØgraman\\Project\\React\\pokedex\\pokedex\\src\\components\\cardDetail\\index.js",["93"],"D:\\PemØgraman\\Project\\React\\pokedex\\pokedex\\src\\pages\\pokemondetail\\index.js",["94"],{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":1,"column":17,"nodeType":"101","messageId":"102","endLine":1,"endColumn":26},{"ruleId":"99","severity":1,"message":"103","line":1,"column":28,"nodeType":"101","messageId":"102","endLine":1,"endColumn":36},{"ruleId":"104","severity":1,"message":"105","line":34,"column":8,"nodeType":"106","endLine":34,"endColumn":10,"suggestions":"107"},{"ruleId":"104","severity":1,"message":"108","line":40,"column":8,"nodeType":"106","endLine":40,"endColumn":17,"suggestions":"109"},{"ruleId":"99","severity":1,"message":"110","line":6,"column":30,"nodeType":"101","messageId":"102","endLine":6,"endColumn":36},{"ruleId":"104","severity":1,"message":"111","line":15,"column":8,"nodeType":"106","endLine":15,"endColumn":10,"suggestions":"112"},{"ruleId":"99","severity":1,"message":"113","line":4,"column":5,"nodeType":"101","messageId":"102","endLine":4,"endColumn":11},"no-native-reassign",["114"],"no-negated-in-lhs",["115"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["116"],"React Hook useEffect has a missing dependency: 'pokemonLists'. Either include it or remove the dependency array.",["117"],"'Button' is defined but never used.","React Hook useEffect has a missing dependency: 'props.pokemon.species.url'. Either include it or remove the dependency array.",["118"],"'Navbar' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"119","fix":"120"},{"desc":"121","fix":"122"},{"desc":"123","fix":"124"},"Update the dependencies array to be: [dispatch]",{"range":"125","text":"126"},"Update the dependencies array to be: [keyword, pokemonLists]",{"range":"127","text":"128"},"Update the dependencies array to be: [props.pokemon.species.url]",{"range":"129","text":"130"},[1158,1160],"[dispatch]",[1405,1414],"[keyword, pokemonLists]",[371,373],"[props.pokemon.species.url]"]